/*
 * RESTful API V2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fieldnation.data.bv2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Json4
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-20T21:04:59.764Z")
public class Json4 {
  @Json(name="preference_value")
  private Integer preferenceValue = null;

  public Json4 preferenceValue(Integer preferenceValue) {
    this.preferenceValue = preferenceValue;
    return this;
  }

   /**
   * Get preferenceValue
   * @return preferenceValue
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPreferenceValue() {
    return preferenceValue;
  }

  public void setPreferenceValue(Integer preferenceValue) {
    this.preferenceValue = preferenceValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Json4 json4 = (Json4) o;
    return Objects.equals(this.preferenceValue, json4.preferenceValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preferenceValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Json4 {\n");
    
    sb.append("    preferenceValue: ").append(toIndentedString(preferenceValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

