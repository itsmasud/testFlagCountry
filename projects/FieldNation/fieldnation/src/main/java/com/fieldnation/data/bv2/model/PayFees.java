/*
 * RESTful API V2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fieldnation.data.bv2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Fee;

/**
 * PayFees
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-20T21:04:59.764Z")
public class PayFees {
  @Json(name="cancellation")
  private Fee cancellation = null;

  @Json(name="insurance")
  private Fee insurance = null;

  @Json(name="flat")
  private Fee flat = null;

  @Json(name="provider")
  private Fee provider = null;

  @Json(name="buyer")
  private Fee buyer = null;

  public PayFees cancellation(Fee cancellation) {
    this.cancellation = cancellation;
    return this;
  }

   /**
   * Get cancellation
   * @return cancellation
  **/
  @ApiModelProperty(example = "null", value = "")
  public Fee getCancellation() {
    return cancellation;
  }

  public void setCancellation(Fee cancellation) {
    this.cancellation = cancellation;
  }

  public PayFees insurance(Fee insurance) {
    this.insurance = insurance;
    return this;
  }

   /**
   * Get insurance
   * @return insurance
  **/
  @ApiModelProperty(example = "null", value = "")
  public Fee getInsurance() {
    return insurance;
  }

  public void setInsurance(Fee insurance) {
    this.insurance = insurance;
  }

  public PayFees flat(Fee flat) {
    this.flat = flat;
    return this;
  }

   /**
   * Get flat
   * @return flat
  **/
  @ApiModelProperty(example = "null", value = "")
  public Fee getFlat() {
    return flat;
  }

  public void setFlat(Fee flat) {
    this.flat = flat;
  }

  public PayFees provider(Fee provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @ApiModelProperty(example = "null", value = "")
  public Fee getProvider() {
    return provider;
  }

  public void setProvider(Fee provider) {
    this.provider = provider;
  }

  public PayFees buyer(Fee buyer) {
    this.buyer = buyer;
    return this;
  }

   /**
   * Get buyer
   * @return buyer
  **/
  @ApiModelProperty(example = "null", value = "")
  public Fee getBuyer() {
    return buyer;
  }

  public void setBuyer(Fee buyer) {
    this.buyer = buyer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayFees payFees = (PayFees) o;
    return Objects.equals(this.cancellation, payFees.cancellation) &&
        Objects.equals(this.insurance, payFees.insurance) &&
        Objects.equals(this.flat, payFees.flat) &&
        Objects.equals(this.provider, payFees.provider) &&
        Objects.equals(this.buyer, payFees.buyer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancellation, insurance, flat, provider, buyer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayFees {\n");
    
    sb.append("    cancellation: ").append(toIndentedString(cancellation)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    flat: ").append(toIndentedString(flat)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

