/*
 * RESTful API V2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fieldnation.data.bv2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * PayModifier
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-20T21:04:59.764Z")
public class PayModifier {
  @Json(name="id")
  private Integer id = null;

  @Json(name="charged")
  private Boolean charged = null;

  @Json(name="amount")
  private BigDecimal amount = null;

  @Json(name="modifier")
  private BigDecimal modifier = null;

  /**
   * Gets or Sets calculation
   */
  public enum CalculationEnum {
    @Json(name="fixed")
    FIXED("fixed"),
    
    @Json(name="percent")
    PERCENT("percent");

    private String value;

    CalculationEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @Json(name="calculation")
  private CalculationEnum calculation = null;

  @Json(name="name")
  private String name = null;

  @Json(name="description")
  private String description = null;

  /**
   * Gets or Sets actions
   */
  public enum ActionsEnum {
    @Json(name="charge")
    CHARGE("charge"),
    
    @Json(name="remove")
    REMOVE("remove");

    private String value;

    ActionsEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @Json(name="actions")
  private List<ActionsEnum> actions = new ArrayList<ActionsEnum>();

  public PayModifier id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PayModifier charged(Boolean charged) {
    this.charged = charged;
    return this;
  }

   /**
   * Get charged
   * @return charged
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCharged() {
    return charged;
  }

  public void setCharged(Boolean charged) {
    this.charged = charged;
  }

  public PayModifier amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public PayModifier modifier(BigDecimal modifier) {
    this.modifier = modifier;
    return this;
  }

   /**
   * Get modifier
   * @return modifier
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getModifier() {
    return modifier;
  }

  public void setModifier(BigDecimal modifier) {
    this.modifier = modifier;
  }

  public PayModifier calculation(CalculationEnum calculation) {
    this.calculation = calculation;
    return this;
  }

   /**
   * Get calculation
   * @return calculation
  **/
  @ApiModelProperty(example = "null", value = "")
  public CalculationEnum getCalculation() {
    return calculation;
  }

  public void setCalculation(CalculationEnum calculation) {
    this.calculation = calculation;
  }

  public PayModifier name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PayModifier description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PayModifier actions(List<ActionsEnum> actions) {
    this.actions = actions;
    return this;
  }

  public PayModifier addActionsItem(ActionsEnum actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ActionsEnum> getActions() {
    return actions;
  }

  public void setActions(List<ActionsEnum> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayModifier payModifier = (PayModifier) o;
    return Objects.equals(this.id, payModifier.id) &&
        Objects.equals(this.charged, payModifier.charged) &&
        Objects.equals(this.amount, payModifier.amount) &&
        Objects.equals(this.modifier, payModifier.modifier) &&
        Objects.equals(this.calculation, payModifier.calculation) &&
        Objects.equals(this.name, payModifier.name) &&
        Objects.equals(this.description, payModifier.description) &&
        Objects.equals(this.actions, payModifier.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, charged, amount, modifier, calculation, name, description, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayModifier {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    charged: ").append(toIndentedString(charged)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
    sb.append("    calculation: ").append(toIndentedString(calculation)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

