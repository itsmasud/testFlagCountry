/*
 * RESTful API V2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fieldnation.data.bv2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BackgroundCheck;
import io.swagger.client.model.Company;
import io.swagger.client.model.Coords;
import io.swagger.client.model.DrugTest;
import io.swagger.client.model.Request;
import io.swagger.client.model.Route;
import io.swagger.client.model.TimeZone;
import io.swagger.client.model.UserBlocked;
import io.swagger.client.model.UserCompany;
import io.swagger.client.model.UserJobs;
import io.swagger.client.model.UserPreferredGroups;
import io.swagger.client.model.UserRating;
import io.swagger.client.model.UserUpcomingSchedule;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * User
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-20T21:04:59.764Z")
public class User {
  @Json(name="id")
  private Integer id = null;

  @Json(name="first_name")
  private String firstName = null;

  @Json(name="last_name")
  private String lastName = null;

  @Json(name="address")
  private String address = null;

  @Json(name="city")
  private String city = null;

  @Json(name="state")
  private String state = null;

  @Json(name="zip")
  private String zip = null;

  @Json(name="country")
  private String country = null;

  @Json(name="thumbnail")
  private String thumbnail = null;

  @Json(name="worker_compensation")
  private Boolean workerCompensation = null;

  @Json(name="time_zone")
  private TimeZone timeZone = null;

  @Json(name="request")
  private Request request = null;

  @Json(name="route")
  private Route route = null;

  @Json(name="website")
  private String website = null;

  @Json(name="coords")
  private Coords coords = null;

  @Json(name="protec")
  private Boolean protec = null;

  @Json(name="background_checks")
  private List<BackgroundCheck> backgroundChecks = new ArrayList<BackgroundCheck>();

  @Json(name="drug_tests")
  private List<DrugTest> drugTests = new ArrayList<DrugTest>();

  @Json(name="notes")
  private String notes = null;

  @Json(name="upcoming_schedule")
  private List<UserUpcomingSchedule> upcomingSchedule = new ArrayList<UserUpcomingSchedule>();

  @Json(name="worked_with")
  private Boolean workedWith = null;

  @Json(name="jobs")
  private UserJobs jobs = null;

  @Json(name="managed")
  private Boolean managed = null;

  @Json(name="rating")
  private UserRating rating = null;

  @Json(name="company")
  private UserCompany company = null;

  @Json(name="client")
  private Company client = null;

  @Json(name="role")
  private String role = null;

  @Json(name="last_active")
  private Date lastActive = null;

  @Json(name="email")
  private String email = null;

  @Json(name="phone")
  private String phone = null;

  @Json(name="preferred_groups")
  private List<UserPreferredGroups> preferredGroups = new ArrayList<UserPreferredGroups>();

  @Json(name="blocked")
  private List<UserBlocked> blocked = new ArrayList<UserBlocked>();

  public User id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public User address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public User city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public User state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public User zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Get zip
   * @return zip
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public User country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public User thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  public User workerCompensation(Boolean workerCompensation) {
    this.workerCompensation = workerCompensation;
    return this;
  }

   /**
   * Get workerCompensation
   * @return workerCompensation
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getWorkerCompensation() {
    return workerCompensation;
  }

  public void setWorkerCompensation(Boolean workerCompensation) {
    this.workerCompensation = workerCompensation;
  }

  public User timeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @ApiModelProperty(example = "null", value = "")
  public TimeZone getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
  }

  public User request(Request request) {
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @ApiModelProperty(example = "null", value = "")
  public Request getRequest() {
    return request;
  }

  public void setRequest(Request request) {
    this.request = request;
  }

  public User route(Route route) {
    this.route = route;
    return this;
  }

   /**
   * Get route
   * @return route
  **/
  @ApiModelProperty(example = "null", value = "")
  public Route getRoute() {
    return route;
  }

  public void setRoute(Route route) {
    this.route = route;
  }

  public User website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public User coords(Coords coords) {
    this.coords = coords;
    return this;
  }

   /**
   * Get coords
   * @return coords
  **/
  @ApiModelProperty(example = "null", value = "")
  public Coords getCoords() {
    return coords;
  }

  public void setCoords(Coords coords) {
    this.coords = coords;
  }

  public User protec(Boolean protec) {
    this.protec = protec;
    return this;
  }

   /**
   * Get protec
   * @return protec
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getProtec() {
    return protec;
  }

  public void setProtec(Boolean protec) {
    this.protec = protec;
  }

  public User backgroundChecks(List<BackgroundCheck> backgroundChecks) {
    this.backgroundChecks = backgroundChecks;
    return this;
  }

  public User addBackgroundChecksItem(BackgroundCheck backgroundChecksItem) {
    this.backgroundChecks.add(backgroundChecksItem);
    return this;
  }

   /**
   * Get backgroundChecks
   * @return backgroundChecks
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<BackgroundCheck> getBackgroundChecks() {
    return backgroundChecks;
  }

  public void setBackgroundChecks(List<BackgroundCheck> backgroundChecks) {
    this.backgroundChecks = backgroundChecks;
  }

  public User drugTests(List<DrugTest> drugTests) {
    this.drugTests = drugTests;
    return this;
  }

  public User addDrugTestsItem(DrugTest drugTestsItem) {
    this.drugTests.add(drugTestsItem);
    return this;
  }

   /**
   * Get drugTests
   * @return drugTests
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<DrugTest> getDrugTests() {
    return drugTests;
  }

  public void setDrugTests(List<DrugTest> drugTests) {
    this.drugTests = drugTests;
  }

  public User notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public User upcomingSchedule(List<UserUpcomingSchedule> upcomingSchedule) {
    this.upcomingSchedule = upcomingSchedule;
    return this;
  }

  public User addUpcomingScheduleItem(UserUpcomingSchedule upcomingScheduleItem) {
    this.upcomingSchedule.add(upcomingScheduleItem);
    return this;
  }

   /**
   * Get upcomingSchedule
   * @return upcomingSchedule
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<UserUpcomingSchedule> getUpcomingSchedule() {
    return upcomingSchedule;
  }

  public void setUpcomingSchedule(List<UserUpcomingSchedule> upcomingSchedule) {
    this.upcomingSchedule = upcomingSchedule;
  }

  public User workedWith(Boolean workedWith) {
    this.workedWith = workedWith;
    return this;
  }

   /**
   * Get workedWith
   * @return workedWith
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getWorkedWith() {
    return workedWith;
  }

  public void setWorkedWith(Boolean workedWith) {
    this.workedWith = workedWith;
  }

  public User jobs(UserJobs jobs) {
    this.jobs = jobs;
    return this;
  }

   /**
   * Get jobs
   * @return jobs
  **/
  @ApiModelProperty(example = "null", value = "")
  public UserJobs getJobs() {
    return jobs;
  }

  public void setJobs(UserJobs jobs) {
    this.jobs = jobs;
  }

  public User managed(Boolean managed) {
    this.managed = managed;
    return this;
  }

   /**
   * Get managed
   * @return managed
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getManaged() {
    return managed;
  }

  public void setManaged(Boolean managed) {
    this.managed = managed;
  }

  public User rating(UserRating rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @ApiModelProperty(example = "null", value = "")
  public UserRating getRating() {
    return rating;
  }

  public void setRating(UserRating rating) {
    this.rating = rating;
  }

  public User company(UserCompany company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(example = "null", value = "")
  public UserCompany getCompany() {
    return company;
  }

  public void setCompany(UserCompany company) {
    this.company = company;
  }

  public User client(Company client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @ApiModelProperty(example = "null", value = "")
  public Company getClient() {
    return client;
  }

  public void setClient(Company client) {
    this.client = client;
  }

  public User role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public User lastActive(Date lastActive) {
    this.lastActive = lastActive;
    return this;
  }

   /**
   * Get lastActive
   * @return lastActive
  **/
  @ApiModelProperty(example = "null", value = "")
  public Date getLastActive() {
    return lastActive;
  }

  public void setLastActive(Date lastActive) {
    this.lastActive = lastActive;
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public User phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public User preferredGroups(List<UserPreferredGroups> preferredGroups) {
    this.preferredGroups = preferredGroups;
    return this;
  }

  public User addPreferredGroupsItem(UserPreferredGroups preferredGroupsItem) {
    this.preferredGroups.add(preferredGroupsItem);
    return this;
  }

   /**
   * Get preferredGroups
   * @return preferredGroups
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<UserPreferredGroups> getPreferredGroups() {
    return preferredGroups;
  }

  public void setPreferredGroups(List<UserPreferredGroups> preferredGroups) {
    this.preferredGroups = preferredGroups;
  }

  public User blocked(List<UserBlocked> blocked) {
    this.blocked = blocked;
    return this;
  }

  public User addBlockedItem(UserBlocked blockedItem) {
    this.blocked.add(blockedItem);
    return this;
  }

   /**
   * Get blocked
   * @return blocked
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<UserBlocked> getBlocked() {
    return blocked;
  }

  public void setBlocked(List<UserBlocked> blocked) {
    this.blocked = blocked;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.address, user.address) &&
        Objects.equals(this.city, user.city) &&
        Objects.equals(this.state, user.state) &&
        Objects.equals(this.zip, user.zip) &&
        Objects.equals(this.country, user.country) &&
        Objects.equals(this.thumbnail, user.thumbnail) &&
        Objects.equals(this.workerCompensation, user.workerCompensation) &&
        Objects.equals(this.timeZone, user.timeZone) &&
        Objects.equals(this.request, user.request) &&
        Objects.equals(this.route, user.route) &&
        Objects.equals(this.website, user.website) &&
        Objects.equals(this.coords, user.coords) &&
        Objects.equals(this.protec, user.protec) &&
        Objects.equals(this.backgroundChecks, user.backgroundChecks) &&
        Objects.equals(this.drugTests, user.drugTests) &&
        Objects.equals(this.notes, user.notes) &&
        Objects.equals(this.upcomingSchedule, user.upcomingSchedule) &&
        Objects.equals(this.workedWith, user.workedWith) &&
        Objects.equals(this.jobs, user.jobs) &&
        Objects.equals(this.managed, user.managed) &&
        Objects.equals(this.rating, user.rating) &&
        Objects.equals(this.company, user.company) &&
        Objects.equals(this.client, user.client) &&
        Objects.equals(this.role, user.role) &&
        Objects.equals(this.lastActive, user.lastActive) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.phone, user.phone) &&
        Objects.equals(this.preferredGroups, user.preferredGroups) &&
        Objects.equals(this.blocked, user.blocked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, address, city, state, zip, country, thumbnail, workerCompensation, timeZone, request, route, website, coords, protec, backgroundChecks, drugTests, notes, upcomingSchedule, workedWith, jobs, managed, rating, company, client, role, lastActive, email, phone, preferredGroups, blocked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    workerCompensation: ").append(toIndentedString(workerCompensation)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    coords: ").append(toIndentedString(coords)).append("\n");
    sb.append("    protec: ").append(toIndentedString(protec)).append("\n");
    sb.append("    backgroundChecks: ").append(toIndentedString(backgroundChecks)).append("\n");
    sb.append("    drugTests: ").append(toIndentedString(drugTests)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    upcomingSchedule: ").append(toIndentedString(upcomingSchedule)).append("\n");
    sb.append("    workedWith: ").append(toIndentedString(workedWith)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    managed: ").append(toIndentedString(managed)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    lastActive: ").append(toIndentedString(lastActive)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    preferredGroups: ").append(toIndentedString(preferredGroups)).append("\n");
    sb.append("    blocked: ").append(toIndentedString(blocked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

